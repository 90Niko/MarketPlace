@using MarketPlace.Core.Models

@model AllProductQueryModel


@{
    ViewBag.Title = "All Products";
}

<h2 class="text-center">@ViewBag.Title</h2>
<hr />

@* <div class="text-center row">
    @foreach (var a in Model.Products)
    {
        <div class="card col-4 " style="width: 15rem;">
            <div class="card-body">
                <h5 class="card-title mt-1">@a.Name</h5>
                <img class="card-img-top" src=@a.Image alt="Product Image" style="width:128px;height:128px;">
                <p class="mb-0"><span class="fw-bold">Added on: </span>@a.CreatedOn</p>
                <p class="mb-0"><span class="fw-bold">Category: </span>@a.Category</p>
                 <p class="mb-0"><span class="fw-bold">Description: </span>@a.Description</p>
                <p class="mb-0"><span class="fw-bold">Price: </span>@a.Price Euro</p>
                <p class="mb-0"><span class="fw-bold">Seller: </span>@a.Seller</p>
                <p class="mb-0"><span class="fw-bold">Quantity: </span>@a.Quantity</p>
                <p class="mb-0"><span class="fw-bold">Rating: </span>@a.Rating</p>
            </div>

            @if (User.Identity.Name ==a.Seller)
            {
                <a asp-controller="Product" asp-action="Edit" asp-route-id="@a.Id" class="fs-6 btn btn-outline-dark mb-3 w-100 p-3 fw-bold">Edit</a>
                <a asp-controller="Product" asp-action="Delete" asp-route-id="@a.Id" class="fs-6 btn btn-outline-danger mb-3 w-100 p-3 fw-bold">Delete</a>
            }
            else
            {
                <form class="input-group-sm"asp-controller="Cart" asp-action="AddToCart" asp-route-id="@a.Id">
                    <input type="submit" value="Add to Cart" class="fs-6 btn btn-outline-success mb-3 w-100 p-3 fw-bold" />
                </form>
                <form class="input-group-sm" asp-controller="Cart" asp-action="AddToCart" asp-route-id="@a.Id">
                    <input type="submit" value="Details" class="fs-6 btn btn-outline-success mb-3 w-100 p-3 fw-bold" />
                </form>
            }
        </div>
    }
</div>*@
<form method="get">
    <div class="row">
        <div class="form-group col-md-3 d-flex justify-content-between">
            <div class="form-group">
                <label asp-for="Category"></label> <select asp-for="Category" class="form-control">

                    <option value="">All</option> @foreach (var category in Model.Categories)
                    {
                        <option value="@category">@category</option>
                    }
                </select>
            </div>
        </div>
        <div class="form-group col-md-3">
            <label asp-for="SearchTerm"></label>
            <input asp-for="SearchTerm" class="form-control" placeholder="...">
        </div> <div class="form-group col-md-3">
            <div class="form-group">
                <label asp-for="Sorting"></label> <select asp-for="Sorting" class="form-control">
                    <option value="0">Newest</option>
                    <option value="1">Lowest price first</option>
                    <option value="2">Not rented first</option>
                </select>
            </div>
        </div> <div class="col-md-3"> <div class="form-group mt-4 p-2"> <input type="submit" value="Search" class="btn btn-primary" /> </div> </div>
    </div>
</form>

@{
    var previousPage = Model.CurrentPage - 1; if (previousPage < 1) { previousPage = 1; }
    var maxPage = Math.Ceiling((double)Model.TotalProductsCount / AllProductQueryModel.ProductsPerPage);
}

<div class="row mb-5">
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
        <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="House"
           asp-action="All"
           asp-route-currentPage="@previousPage"
           asp-route-category="@Model.Category"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)"><<</a>
    </div>

    @{
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage || !Model.Products.Any();
    }
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
        <a class="btn btn-primary @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
           asp-controller="House"
           asp-action="All"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-category="@Model.Category"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)">
            >>
        </a>
    </div>
</div> @if (!Model.Products.Any())
{
    <h2 class="text-center">No houses found by the given criteria!</h2>
}
<div class="row">
    @foreach (var house in Model.Products)
    {
        <partial name="_ProductPartial" model="@house" />
    }
</div>